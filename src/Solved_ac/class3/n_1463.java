package Solved_ac.class3;

import java.util.Scanner;

/* 이 문제는 어떻게 해결해야할까?
* 일단. /3을 최대한 많이 활용하는게 제일 좋은방법인것은 맞음.
* 그 다음에 /2 그 다음에 -1
* 그러면 일단 어떤 수가 있으면 3으로 나눴을 때 3가지 길이 있음.
* 1. 나머지 0? --> 3의 배수니 계속 나누면댐
* 2. 나머지 1? --> -1한번 해주고 계속 나누면 댐
* 3. 나머지 2? --> -1 두번 해주고 계속 나눠주면 제일 빠르지 않나?
* 이렇게 하면 되게 쉬울 것 같은 코드가 될 것 같은데.
* 아 완전히 틀렸네 내가 왜 3의 제곱수들만 생각했지?
* 21을 생각해봐. 21은 /3 = 7이잖아. 7-1 6/3 2-1 1이지...아니 내가 생각한게 이게아님.
* 10만 생각해버렸어. 9/3 3/3 1 이것만 생각했어.
* 이거는 시간제한이 무려 0.15초 이기때문에. 이걸 잘 풀어야해.
* 와.......이거 점화식이 들어가네. 이게 진짜 얼마만이야.
* 고등학교때 보고 진짜 오랜만에 보네. 와 이거 진짜 맞는말이네
* 저번에 피보나치 수열도 그렇고. 이건 정말 많이 쓰이나보다. Dynamic Programming 이 진짜 많이 쓰이긴 하는군.
* */


public class n_1463 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();

        int[] A = new int[N+1];
        A[1] = 0;

        for(int i = 2;i<=N;i++){
            A[i] = A[i-1] + 1;
            if(i % 2==0){
                A[i] = Math.min(A[i],A[i/2]+1);
            }
            if(i % 3==0){
                A[i] = Math.min(A[i],A[i/3]+1);
            }
        }
        System.out.print(A[N]);
    }
}